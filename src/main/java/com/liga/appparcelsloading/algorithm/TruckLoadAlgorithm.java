package com.liga.appparcelsloading.algorithm;

import com.liga.appparcelsloading.model.Dimension;
import com.liga.appparcelsloading.model.Parcel;

import java.util.List;

/**
 * Интерфейс для алгоритмов загрузки посылок в грузовики.
 * Предоставляет методы для равномерного распределения посылок по грузовикам
 * с использованием различных стратегий загрузки.
 */
public interface TruckLoadAlgorithm {
    /**
     * Загружает посылки в грузовики, распределяя их максимально равномерно.
     *
     * @param parcels список посылок, которые необходимо распределить по грузовикам.
     *                Каждая посылка представлена объектом {@link Parcel}, который содержит информацию
     *                о форме посылки и её символическом представлении.
     * @param dimensionsTrucks список размеров грузовиков, представленный объектами {@link Dimension},
     *                         где каждый объект содержит ширину и высоту грузовика.
     * @return список массивов символов, представляющих содержимое каждого загруженного грузовика.
     *         Каждый грузовик представлен как двумерный массив символов {@code char[][]}.
     */
    List<char[][]> loadParcels(List<Parcel> parcels, List<Dimension> dimensionsTrucks);

    /**
     * Загружает посылки по их именам в грузовики, распределяя их максимально равномерно.
     * Имена посылок разделяются пробелом, запятой или другими разделителями и используются для поиска
     * соответствующих объектов {@link Parcel}.
     *
     * @param nameParcels строка, содержащая имена посылок, которые необходимо загрузить.
     *                    Разделители могут включать пробелы, запятые, двоеточия и точки с запятой.
     * @param dimensionsTrucks список размеров грузовиков, представленный объектами {@link Dimension},
     *                         где каждый объект содержит ширину и высоту грузовика.
     * @return список массивов символов, представляющих содержимое каждого загруженного грузовика.
     *         Каждый грузовик представлен как двумерный массив символов {@code char[][]}.
     */
    List<char[][]> loadParcelsByName(String nameParcels, List<Dimension> dimensionsTrucks);

}
